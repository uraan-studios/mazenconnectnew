model PrincipalReport {
  id                  Int                  @id @default(autoincrement())
  campusId            Int
  campus              User                 @relation(fields: [campusId], references: [fkId])
  createdAt           DateTime             @default(now())
  // Remarks
  studentRemarks      String?
  staffRemarks        String?
  workloadRemarks     String?
  ttblRemarks         String?
  parentFeedback      String?
  PRswot              PRswot?
  PRttbl              PRttbl?
  PRttblContent       PRTTBLContent?
  PRstudent           PRstudent?
  PRStaff             PRStaff?
  PRworkload          PRworkload?
  PRactivity          PRactivity?
  PRHcd               PRHcd?
  PRTenuffus          PRTenuffus?
  PRObservationRecord PRObservationRecord?
  PRrechecking        PRrechecking?
  PRELP              PRELP?
  PRacademic         PRacademic?
  //   New Stuff
completed Boolean @default(false)

  @@index([campusId], map: "principalreport_campusId_idx")
}

model PRrechecking {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])
  remarks  String

  PRrecheckingCell PRrecheckingCell[]
}

model PRrecheckingCell {
  id           Int          @id @default(autoincrement())
  rowId        Int
  PRrechecking PRrechecking @relation(fields: [rowId], references: [reportId])
  classId      Int
  class        Class        @relation(fields: [classId], references: [id])
  count  Int
  percentage Int
  studentCount Int
  PRrecheckingSubjectCell PRrecheckingSubjectCell[]

  @@index([rowId]) // Unique constraint added here
}

model PRrecheckingSubjectCell {
  id           Int          @id @default(autoincrement())
  rowId        Int
  PRrechecking PRrecheckingCell @relation(fields: [rowId], references: [id])
  subjectId    Int
  subject      Subjects     @relation(fields: [subjectId], references: [id])
  count        Int

  @@index([rowId]) // Unique constraint added here
}

model PRTenuffus {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])
  ealyYears Int
  primaryYears Int
  middleYears Int
  number   String?
  remarks  String
}

// ! Need to add other subjects
model PRTTBLContent {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])

  tbisRemarks String?

  preNurseryCLLE Boolean
  preNurseryCLLU Boolean
  preNurseryMD   Boolean

  nurseryCLLE Boolean
  nurseryCLLU Boolean
  nurseryMD   Boolean

  kindergartenCLLE Boolean
  kindergartenCLLU Boolean
  kindergartenyMD  Boolean

// Grade 1
g1Eng Boolean
g1Urdu Boolean
g1Math Boolean
g1GK Boolean
g1ICT Boolean
g1Isl Boolean

// Grade 2
g2Eng Boolean
g2Urdu Boolean
g2Math Boolean
g2GK Boolean
g2ICT Boolean
g2Isl Boolean

// Grade 3
g3Eng Boolean
g3Urdu Boolean
g3Math Boolean
g3GK Boolean
g3ICT Boolean
g3Isl Boolean

// Grade 4
g4Eng Boolean
g4Urdu Boolean
g4Math Boolean
g4SS Boolean
g4ICT Boolean
g4Isl Boolean
g4Sci Boolean

// Grade 5
g5Eng Boolean
g5Urdu Boolean
g5Math Boolean
g5SS Boolean
g5ICT Boolean
g5Isl Boolean
g5Sci Boolean

}

// ? HCD Changed
// model PRHcd {
//   reportId Int             @id @unique
//   report   PrincipalReport @relation(fields: [reportId], references: [id])
//   remarks  String
//   meetings Int
//   workload Int
// }

//? HCD MODULE 
model PRHcd {
    reportId Int             @id @unique
    report   PrincipalReport @relation(fields: [reportId], references: [id])
    remarks  String

    meetings Int
    workload Int
 
    //! Early Years
    // Pre Nursery
    preNurseryPlanner Boolean
    preNurseryWorksheets Boolean
    preNuseryTTBL Boolean

    // Nursery
    nurseryPlanner Boolean
    nurseryWorksheets Boolean
    nurseryTTBL Boolean

    // Kindergarten
    kindergartenPlanner Boolean
    kindergartenWorksheets Boolean    
    kindergartenTTBL Boolean

    //! Primary & Middle Years
    // Grade 1
    grade1Planner Boolean
    grade1Worksheets Boolean
    grade1TTBL Boolean

    // Grade 2
    grade2Planner Boolean
    grade2Worksheets Boolean
    grade2TTBL Boolean

    // Grade 3
    grade3Planner Boolean
    grade3Worksheets Boolean
    grade3TTBL Boolean

    // Grade 4
    grade4Planner Boolean
    grade4Worksheets Boolean    
    grade4TTBL Boolean

    // Grade 5
    grade5Planner Boolean
    grade5Worksheets Boolean
    grade5TTBL Boolean

    // Grade 6
    grade6Planner Boolean
    grade6Worksheets Boolean

    // Grade 7
    grade7Planner Boolean
    grade7Worksheets Boolean

    // Grade 8
    grade8Planner Boolean
    grade8Worksheets Boolean
}

// ? ELP MODULE
model PRELP {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])
  remarks  String
    
    // Grade 1
    grade1Planner Boolean
    grade1Worksheets Boolean

    // Grade 2
    grade2Planner Boolean
    grade2Worksheets Boolean

    // Grade 3
    grade3Planner Boolean
    grade3Worksheets Boolean

    // Grade 4
    grade4Planner Boolean
    grade4Worksheets Boolean    

    // Grade 5
    grade5Planner Boolean
    grade5Worksheets Boolean

    // Grade 6
    grade6Planner Boolean
    grade6Worksheets Boolean

    // Grade 7
    grade7Planner Boolean
    grade7Worksheets Boolean

    // Grade 8
    grade8Planner Boolean    
    grade8Worksheets Boolean
}

// ? ACADEMIC MODULE
model PRacademic {

  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])
  remarks  String
  PRacademicCell PRacademicCell[]

  @@index([reportId], map: "PRacademic_reportId_idx")
}

model PRacademicCell {
  id          Int        @id @default(autoincrement())
  rowId       Int
  PRacademic  PRacademic @relation(fields: [rowId], references: [reportId])
  classId     Int
  class       Class      @relation(fields: [classId], references: [id])
  total       Int
  passed      Int
  failed      Int

  @@index([rowId]) // Unique constraint added here
}
// ACTIVITY MODULE
model PRactivity {
  reportId       Int              @id @unique
  report         PrincipalReport  @relation(fields: [reportId], references: [id])
  remarks        String
  PRactivityCell PRactivityCell[]
}

model PRactivityCell {
  id          Int        @id @default(autoincrement())
  rowId       Int
  cellValue   String
  date        DateTime   @default(now())
  description String
  PRactivity  PRactivity @relation(fields: [rowId], references: [reportId])
}

// WORKLOAD MODULE
model PRworkload {
  reportId       Int              @id @unique
  report         PrincipalReport  @relation(fields: [reportId], references: [id])
  remarks        String
  PRworkloadCell PRworkloadCell[]
}

model PRworkloadCell {
  id         Int        @id @default(autoincrement())
  rowId      Int
  PRworkload PRworkload @relation(fields: [rowId], references: [reportId])
  teacherId  Int
  teacher    Staff      @relation(fields: [teacherId], references: [id])
  workload   Int
  isHomeland Boolean @default(false)
  students   Int

  @@index([rowId]) // Unique constraint added here
}

model PRObservationRecord {
  reportId                Int                       @id @unique
  report                  PrincipalReport           @relation(fields: [reportId], references: [id])
  PRObservationRecordCell PRObservationRecordCell[]
}

model PRObservationRecordCell {
  id                  Int                 @id @default(autoincrement())
  rowId               Int
  PRObservationRecord PRObservationRecord @relation(fields: [rowId], references: [reportId])
  teacherId           Int
  teacher             Staff               @relation(fields: [teacherId], references: [id])

  walkthrough String
  informed    String
  uninformed  String
}

// SWOT MODULE
model PRswot {
  reportId    Int             @id @unique
  report      PrincipalReport @relation(fields: [reportId], references: [id])
  strength    String
  weakness    String
  opportunity String
  threat      String
}

// TTBL MODULE
model PRttbl {
  reportId   Int             @id @unique
  report     PrincipalReport @relation(fields: [reportId], references: [id])
  remarks    String
  PRttblCell PRttblCell[]
}

model PRttblCell {
  id         Int    @id @default(autoincrement())
  rowId      Int
  PRttbl     PRttbl @relation(fields: [rowId], references: [reportId])
  name       String
  avaliable  Int
  working    Int
  outOfOrder Int

  @@index([rowId]) // Unique constraint added here
}

// STUDENT MODULE
model PRstudent {
  reportId           Int                  @id @unique
  report             PrincipalReport      @relation(fields: [reportId], references: [id])
  remarks            String
  PRstudentClassCell PRstudentClassCell[]
}

model PRstudentClassCell {
  id                   Int                    @id @default(autoincrement())
  rowId                Int
  PRstudent            PRstudent              @relation(fields: [rowId], references: [reportId])
  classId              Int
  class                Class                  @relation(fields: [classId], references: [id])
  prev                 Int
  left                 Int
  new                  Int
  movedOver            Int
  promoted             Int
  transfered           Int
  total                Int
  boys                 Int
  girls                Int
  PRstudentSectionCell PRstudentSectionCell[]

  @@index([rowId]) // Unique constraint added here
}

model PRstudentSectionCell {
  id         Int                @id @default(autoincrement())
  rowId      Int
  PRstudent  PRstudentClassCell @relation(fields: [rowId], references: [id])
  sectionId  Int
  section    ClassSection       @relation(fields: [sectionId], references: [id])
  prev       Int
  left       Int
  new        Int
  movedOver  Int
  promoted   Int
  transfered Int
  total      Int
  boys       Int
  girls      Int

  @@index([rowId]) // Unique constraint added here
}

// EMPLOYEES MODULE
model PRStaff {
  reportId    Int             @id @unique
  report      PrincipalReport @relation(fields: [reportId], references: [id])
  remarks     String
  PRStaffDeps PRStaffDeps[]
}

model PRStaffDeps {
  id           Int            @id @default(autoincrement())
  rowId        Int
  PRStaff      PRStaff        @relation(fields: [rowId], references: [reportId])
  departmentId Int
  department   Department     @relation(fields: [departmentId], references: [id])
  PRStaffDesig PRStaffDesig[]

  @@index([rowId]) // Unique constraint added here
}

model PRStaffDesig {
  id            Int         @id @default(autoincrement())
  rowId         Int
  PRStaffDeps   PRStaffDeps @relation(fields: [rowId], references: [id])
  designationId Int
  designation   Designation @relation(fields: [designationId], references: [id])
  prev          Int
  left          Int
  new           Int
  total         Int

  @@index([rowId]) // Unique constraint added here
}
