model PrincipalReport {
  id                  Int                  @id @default(autoincrement())
  campusId            Int
  campus              User                 @relation(fields: [campusId], references: [fkId])
  createdAt           DateTime             @default(now())
  // Remarks
  studentRemarks      String?
  staffRemarks        String?
  workloadRemarks     String?
  ttblRemarks         String?
  parentFeedback      String?
  PRswot              PRswot?
  PRttbl              PRttbl?
  PRttblContent       PRTTBLContent?
  PRstudent           PRstudent?
  PRStaff             PRStaff?
  PRworkload          PRworkload?
  PRactivity          PRactivity?
  PRHcd               PRHcd?
  PRTenuffus          PRTenuffus?
  PRObservationRecord PRObservationRecord?
  PRrechecking        PRrechecking?
  PRELP              PRELP?
  PRacademic         PRacademic?
  //   New Stuff
completed Boolean @default(false)

  @@index([campusId], map: "principalreport_campusId_idx")
}

model PRrechecking {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])

  PRrecheckingCell PRrecheckingCell[]
}

model PRrecheckingCell {
  id           Int          @id @default(autoincrement())
  rowId        Int
  PRrechecking PRrechecking @relation(fields: [rowId], references: [reportId])
  classId      Int
  class        Class        @relation(fields: [classId], references: [id])
  teacherId    Int
  teacher      Staff        @relation(fields: [teacherId], references: [id])
  subjectId    Int
  subject      Subjects     @relation(fields: [subjectId], references: [id])
  status       Boolean
}

model PRTenuffus {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])
  ealyYears Int
  primaryYears Int
  middleYears Int
  number   String?
  remarks  String
}

// ! Need to add other subjects
model PRTTBLContent {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])

  preNurseryCLLE Boolean
  preNurseryCLLU Boolean
  preNurseryMD   Boolean

  nurseryCLLE Boolean
  nurseryCLLU Boolean
  nurseryMD   Boolean

  kindergartenCLLE Boolean
  kindergartenCLLU Boolean
  kindergartenyMD  Boolean

  // Grade 1
  g1Eng Int
  g1Urdu Int
  g1Math Int
  g1GK Int
  g1ICT Int
  g1Isl Int

  // Grade 2
  g2Eng Int
  g2Urdu Int
  g2Math Int
  g2GK Int
  g2ICT Int
  g2Isl Int

  // Grade 3
  g3Eng Int
  g3Urdu Int
  g3Math Int
  g3GK Int
  g3ICT Int
  g3Isl Int

  // Grade 4
  g4Eng Int
  g4Urdu Int
  g4Math Int
  g4SS Int
  g4ICT Int
  g4Isl Int
  g4Sci Int

  // Grade 5
  g5Eng Int
  g5Urdu Int
  g5Math Int
  g5SS Int
  g5ICT Int
  g5Isl Int
  g5Sci Int

}

// ? HCD Changed
// model PRHcd {
//   reportId Int             @id @unique
//   report   PrincipalReport @relation(fields: [reportId], references: [id])
//   remarks  String
//   meetings Int
//   workload Int
// }

//? HCD MODULE 
model PRHcd {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])
  remarks  String
 
    //! Early Years
    // Pre Nursery
    preNurseryPlanner Int
    preNurseryWorksheets Int
    preNuseryTTBL Int

    // Nursery
    nurseryPlanner Int
    nurseryWorksheets Int
    nurseryTTBL Int

    // Kindergarten
    kindergartenPlanner Int
    kindergartenWorksheets Int    
    kindergartenTTBL Int

    //! Primary & Middle Years
    // Grade 1
    grade1Planner Int
    grade1Worksheets Int
    grade1TTBL Int

    // Grade 2
    grade2Planner Int
    grade2Worksheets Int
    grade2TTBL Int

    // Grade 3
    grade3Planner Int
    grade3Worksheets Int
    grade3TTBL Int

    // Grade 4
    grade4Planner Int
    grade4Worksheets Int    
    grade4TTBL Int

    // Grade 5
    grade5Planner Int
    grade5Worksheets Int
    grade5TTBL Int

    // Grade 6
    grade6Planner Int
    grade6Worksheets Int

    // Grade 7
    grade7Planner Int
    grade7Worksheets Int

    // Grade 8
    grade8Planner Int
    grade8Worksheets Int
}

// ? ELP MODULE
model PRELP {
  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])
  remarks  String
    
    // Grade 1
    grade1Planner Int
    grade1Worksheets Int

    // Grade 2
    grade2Planner Int
    grade2Worksheets Int

    // Grade 3
    grade3Planner Int
    grade3Worksheets Int

    // Grade 4
    grade4Planner Int
    grade4Worksheets Int    

    // Grade 5
    grade5Planner Int
    grade5Worksheets Int

    // Grade 6
    grade6Planner Int
    grade6Worksheets Int

    // Grade 7
    grade7Planner Int
    grade7Worksheets Int

    // Grade 8
    grade8Planner Int    
    grade8Worksheets Int
}

// ? ACADEMIC MODULE
model PRacademic {

  reportId Int             @id @unique
  report   PrincipalReport @relation(fields: [reportId], references: [id])
  remarks  String
  PRacademicCell PRacademicCell[]

  @@index([reportId], map: "PRacademic_reportId_idx")
}

model PRacademicCell {
  id          Int        @id @default(autoincrement())
  rowId       Int
  PRacademic  PRacademic @relation(fields: [rowId], references: [reportId])
  classId     Int
  class       Class      @relation(fields: [classId], references: [id])
  total       Int
  passed      Int
  failed      Int

  @@index([rowId]) // Unique constraint added here
}
// ACTIVITY MODULE
model PRactivity {
  reportId       Int              @id @unique
  report         PrincipalReport  @relation(fields: [reportId], references: [id])
  remarks        String
  PRactivityCell PRactivityCell[]
}

model PRactivityCell {
  id          Int        @id @default(autoincrement())
  rowId       Int
  cellValue   String
  date        DateTime   @default(now())
  description String
  PRactivity  PRactivity @relation(fields: [rowId], references: [reportId])
}

// WORKLOAD MODULE
model PRworkload {
  reportId       Int              @id @unique
  report         PrincipalReport  @relation(fields: [reportId], references: [id])
  remarks        String
  PRworkloadCell PRworkloadCell[]
}

model PRworkloadCell {
  id         Int        @id @default(autoincrement())
  rowId      Int
  PRworkload PRworkload @relation(fields: [rowId], references: [reportId])
  teacherId  Int
  teacher    Staff      @relation(fields: [teacherId], references: [id])
  workload   Int
  students   Int

  @@index([rowId]) // Unique constraint added here
}

model PRObservationRecord {
  reportId                Int                       @id @unique
  report                  PrincipalReport           @relation(fields: [reportId], references: [id])
  PRObservationRecordCell PRObservationRecordCell[]
}

model PRObservationRecordCell {
  id                  Int                 @id @default(autoincrement())
  rowId               Int
  PRObservationRecord PRObservationRecord @relation(fields: [rowId], references: [reportId])
  teacherId           Int
  teacher             Staff               @relation(fields: [teacherId], references: [id])
  classId             Int
  class               Class               @relation(fields: [classId], references: [id])
  sectionId           Int?
  section             ClassSection?       @relation(fields: [sectionId], references: [id])

  subjectId Int
  subject   Subjects @relation(fields: [subjectId], references: [id])

  walkthrough String
  informed    String
  uninformed  String
}

// SWOT MODULE
model PRswot {
  reportId    Int             @id @unique
  report      PrincipalReport @relation(fields: [reportId], references: [id])
  strength    String
  weakness    String
  opportunity String
  threat      String
}

// TTBL MODULE
model PRttbl {
  reportId   Int             @id @unique
  report     PrincipalReport @relation(fields: [reportId], references: [id])
  remarks    String
  PRttblCell PRttblCell[]
}

model PRttblCell {
  id         Int    @id @default(autoincrement())
  rowId      Int
  PRttbl     PRttbl @relation(fields: [rowId], references: [reportId])
  name       String
  avaliable  Int
  working    Int
  outOfOrder Int

  @@index([rowId]) // Unique constraint added here
}

// STUDENT MODULE
model PRstudent {
  reportId           Int                  @id @unique
  report             PrincipalReport      @relation(fields: [reportId], references: [id])
  remarks            String
  PRstudentClassCell PRstudentClassCell[]
}

model PRstudentClassCell {
  id                   Int                    @id @default(autoincrement())
  rowId                Int
  PRstudent            PRstudent              @relation(fields: [rowId], references: [reportId])
  classId              Int
  class                Class                  @relation(fields: [classId], references: [id])
  prev                 Int
  left                 Int
  new                  Int
  movedOver            Int
  promoted             Int
  transfered           Int
  total                Int
  boys                 Int
  girls                Int
  PRstudentSectionCell PRstudentSectionCell[]

  @@index([rowId]) // Unique constraint added here
}

model PRstudentSectionCell {
  id         Int                @id @default(autoincrement())
  rowId      Int
  PRstudent  PRstudentClassCell @relation(fields: [rowId], references: [id])
  sectionId  Int
  section    ClassSection       @relation(fields: [sectionId], references: [id])
  prev       Int
  left       Int
  new        Int
  movedOver  Int
  promoted   Int
  transfered Int
  total      Int
  boys       Int
  girls      Int

  @@index([rowId]) // Unique constraint added here
}

// EMPLOYEES MODULE
model PRStaff {
  reportId    Int             @id @unique
  report      PrincipalReport @relation(fields: [reportId], references: [id])
  remarks     String
  PRStaffDeps PRStaffDeps[]
}

model PRStaffDeps {
  id           Int            @id @default(autoincrement())
  rowId        Int
  PRStaff      PRStaff        @relation(fields: [rowId], references: [reportId])
  departmentId Int
  department   Department     @relation(fields: [departmentId], references: [id])
  PRStaffDesig PRStaffDesig[]

  @@index([rowId]) // Unique constraint added here
}

model PRStaffDesig {
  id            Int         @id @default(autoincrement())
  rowId         Int
  PRStaffDeps   PRStaffDeps @relation(fields: [rowId], references: [id])
  designationId Int
  designation   Designation @relation(fields: [designationId], references: [id])
  prev          Int
  left          Int
  new           Int
  total         Int

  @@index([rowId]) // Unique constraint added here
}
